# 共识算法

### 部分同步，同步和异步通信

我们先来看一下同步通信，用一个众所周知的协议为代表：比特币协议。在比特币中，有一个“已知的固定的上限”，这里指的是10分钟的区块时间。为了比特币网络能够通过产生区块而继续向前发展，比特币协议人为的设定了一个时间前提条件，给节点组成的整个网络总共10分钟的时间来在它的整个终端网络中监听，收集，验证，和传递交易信息。

以太坊是另一个以平均区块时间在15秒钟为同步前提条件的协议的例子。尽管15秒钟比10分钟快很多 - 给以太坊网络带来了更高生产能力的优点 - 但这个优点是以矿工费用为代价的，因为这样会导致生产出更多孤立的区块；就留下了更少的时间让交易信息传递到整个网络。

Tendermint属于这样的一个协议类型，这些协议用部分同步通信解决了共识问题，在这之中，一个部分同步的系统模型在同步和异步周期中来回切换；我们有时将这个模型称为“弱同步”。它的意思是，Tendermint的确依赖于时间前提条件来取得进展。然而，和同步系统相比，进展的速度并不依赖于系统变量，而是依赖于实际网络速度。

##活跃性和终止

定义：“终止属性的定义是每个正确的处理器都应该最终做出决定”

同步系统模型中的那些算法，如中本共识，点点币，未来币，Snow White，Ouroboros等，依靠同步的预置条件不仅仅是为了进程的终止，也是出于安全的考虑。那些为同步系统设计的算法，一直都有已知的确定界限并且一直保持下去。在那些同步界限不在保持下去的事件中，共识就被破坏了，然后链就会产生分叉。因此，以比特币的10分钟区块时间为例，出于对于安全性的保护它是一个恰当的谨慎的设计。

通过对比，如果少于1/3的进程出错，Tendermint永远不会在异步的情况下分叉。这个属性使得Tendermint成为了基于拜占庭容错的权益证明协议，这个协议完全的倾向于安全性而不是活跃性。(参照：[CAP定理](https://en.wikipedia.org/wiki/CAP_theorem)).最终，一个Tendermint区块链会暂时停止直到验证者集合的绝对多数(比如多于2/3)达成共识。

目前，有一些完全工作在异步网络中的共识协议，但是秉承自FLP不可能性定理，这些协议不可能同时是确定性的。

